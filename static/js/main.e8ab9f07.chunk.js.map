{"version":3,"sources":["store/alert/actionTypes.js","store/weather/actionTypes.js","store/weather/reducer.js","store/store.js","store/alert/reducer.js","containers/Layout/index.js","store/alert/actions.js","store/alert/thunks.js","config/api.config.js","api/axios.instance.js","api/weather.service.js","components/City.jsx","store/weather/action.js","store/weather/selectors.js","components/Cities.jsx","components/CityFullInfo/CityFullInfo.jsx","containers/Application/AppRouter.js","store/alert/selectors.js","components/Alert/index.js","components/Alert/Alert.jsx","components/FormInput/index.js","components/FormInput/FormInput.jsx","components/Navbar.jsx","containers/Application/index.js","containers/Application/Application.jsx","App.js","index.js"],"names":["createInitialState","cities","JSON","parse","localStorage","getItem","citiesWeatherReducer","state","action","type","ActionTypes","payload","filter","cityID","rootReducer","combineReducers","alert","visible","store","createStore","composeWithDevTools","applyMiddleware","thunk","Layout","children","showAlertAction","text","hideAlertAction","showAlertThunk","dispatch","setTimeout","API_CONFIG","baseUrl","process","REACT_APP_PROD_URL","axios","create","baseURL","APIkey","interceptors","request","use","config","headers","error","Promise","reject","response","data","message","getWeatherDataFetch","city","a","get","getWeatherDataByIDFetch","id","getHourlyWeatherFetch","lat","lon","City","useDispatch","useState","cityWeather","setCityWeather","getWeather","cityWeatherData","useEffect","iconUrl","weather","icon","className","name","main","src","alt","description","title","temp","toFixed","wind","speed","Date","dt","toLocaleString","onClick","deleteCityAction","to","citiesWeatherStateSelector","Cities","useSelector","length","map","i","reverse","CityFull","useParams","weatherData","setWeatherData","hourlyWeatherData","setHourlyWeatherData","coord","convertZero","value","feels_like","humidity","pressure","hourly","el","style","width","top","backgroundColor","Math","sign","getHours","AppRouter","exact","path","alertStateSelector","Alert","data-dismiss","aria-label","aria-hidden","FormInput","React","forwardRef","ref","onChange","props","Navbar","location","useLocation","useForm","register","handleSubmit","setValue","setItem","stringify","onSubmit","some","e","activeClassName","pathname","placeholder","Application","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ab9f07.chunk.js","sourcesContent":["export default {\r\n  SHOW_ALERT: \"SHOW_ALERT\",\r\n  HIDE_ALERT: \"HIDE_ALERT\",\r\n};\r\n","export default {\r\n  ADD_CITY_WEATHER: \"ADD_CITY_WEATHER\",\r\n  REMOVE_CITY_WEATHER: \"REMOVE_CITY_WEATHER\",\r\n};\r\n","import ActionTypes from \"./actionTypes\";\r\n\r\nconst createInitialState = {\r\n  cities: JSON.parse(localStorage.getItem(\"cities\")) || [],\r\n};\r\n\r\nconst citiesWeatherReducer = (state = createInitialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        cities: [...state.cities, action.payload],\r\n      };\r\n\r\n    case ActionTypes.REMOVE_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        cities: state.cities.filter((cityID) => cityID !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default citiesWeatherReducer;\r\n","import thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\r\n\r\nimport { alertReducer } from \"./alert/reducer\";\r\nimport citiesWeatherReducer from \"./weather/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cities: citiesWeatherReducer,\r\n  alert: alertReducer\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import ActionTypes from \"./actionTypes\";\r\n\r\nexport const alertReducer = (state = { visible: false }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SHOW_ALERT:\r\n      return {\r\n        ...action.payload,\r\n        visible: true,\r\n      };\r\n\r\n    case ActionTypes.HIDE_ALERT:\r\n      return {        \r\n        visible: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport store from \"../../store/store\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>{children}</Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import ActionTypes from \"./actionTypes\";\r\n\r\nexport const showAlertAction = (text, type) => {\r\n  return {\r\n    type: ActionTypes.SHOW_ALERT,\r\n    payload: { text, type },\r\n  };\r\n};\r\n\r\nexport const hideAlertAction = () => {\r\n  return {\r\n    type: ActionTypes.HIDE_ALERT,\r\n  };\r\n};\r\n","import { hideAlertAction, showAlertAction } from \"./actions\";\r\n\r\nexport const showAlertThunk = (text, type = \"warning\") => {\r\n  return (dispatch) => {\r\n    dispatch(showAlertAction(text, type));\r\n    setTimeout(() => dispatch(hideAlertAction()), 5000);\r\n  };\r\n};\r\n","const API_CONFIG_DEV = {\r\n  baseUrl: process.env.REACT_APP_BASE_URL,\r\n};\r\n\r\nconst API_CONFIG_PROD = {\r\n  baseUrl: process.env.REACT_APP_PROD_URL,\r\n};\r\n\r\nexport const API_CONFIG =\r\n  process.env.NODE_ENV !== \"production\" ? API_CONFIG_DEV : API_CONFIG_PROD;\r\n","import axios from \"axios\";\r\nimport { API_CONFIG } from \"../config/api.config\";\r\n\r\nexport default axios.create({\r\n  baseURL: API_CONFIG.baseUrl, \r\n});\r\n","import { showAlertThunk } from \"../store/alert/thunks\";\r\nimport store from \"../store/store\";\r\nimport axios from \"./axios.instance\";\r\n\r\nconst APIkey = process.env.REACT_APP_API_KEY;\r\n\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    config.headers = {\r\n      ...config.headers,\r\n    };\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    store.dispatch(showAlertThunk(error.response.data.message));\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const getWeatherDataFetch = async (city) => {\r\n  const { data } = await axios.get(\r\n    `/weather?q=${city}&units=metric&appid=${APIkey}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getWeatherDataByIDFetch = async (id) => {\r\n  const { data } = await axios.get(\r\n    `/weather?id=${id}&units=metric&appid=${APIkey}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getHourlyWeatherFetch = async (lat, lon) => {\r\n  const { data } = await axios.get(\r\n    `/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,daily&units=metric&appid=${APIkey}`\r\n  );\r\n  return data;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { showAlertThunk } from \"../store/alert/thunks\";\r\nimport { deleteCityAction } from \"../store/weather/action\";\r\nimport { getWeatherDataByIDFetch } from \"../api/weather.service\";\r\n\r\nconst City = ({ cityID }) => {\r\n  const dispatch = useDispatch();\r\n  const [cityWeather, setCityWeather] = useState([]);\r\n\r\n  const getWeather = async () => {\r\n    try {\r\n      const cityWeatherData = await getWeatherDataByIDFetch(cityID);\r\n      setCityWeather(cityWeatherData);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const updateCityWeather = () => {\r\n    getWeather(cityWeather.id);\r\n    dispatch(showAlertThunk(\"Data updated\", \"success\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather(cityID);\r\n  }, [cityID]);\r\n\r\n  const iconUrl =\r\n    cityWeather.weather &&\r\n    \"http://openweathermap.org/img/w/\" + cityWeather.weather[0].icon + \".png\";\r\n\r\n  return (\r\n    <div className=\"col mb-3\">\r\n      <div className=\"card h-100 border-dark text-center\">\r\n        <div className=\"card-header\">\r\n          <h4>{cityWeather.name}</h4>\r\n        </div>\r\n        {/* /.card-header */}\r\n\r\n        <div className=\"card-body bg-dark text-white\">\r\n          <div className=\"card-text\">\r\n            {cityWeather.weather && (\r\n              <div>\r\n                <span>{cityWeather.weather[0].main}</span>\r\n                <img\r\n                  src={iconUrl}\r\n                  alt={cityWeather.weather[0].description}\r\n                  title={cityWeather.weather[0].description}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {cityWeather.main && (\r\n            <h3 className=\"card-text\">{cityWeather.main.temp.toFixed()} °C</h3>\r\n          )}\r\n\r\n          {cityWeather.wind && (\r\n            <p className=\"card-text\">\r\n              Wind Speed: {cityWeather.wind.speed} m/s\r\n            </p>\r\n          )}\r\n\r\n          <p className=\"card-text\">\r\n            <small>\r\n              Time of data calculation:\r\n              <br />\r\n              {new Date(cityWeather.dt * 1000).toLocaleString()}\r\n            </small>\r\n          </p>\r\n        </div>\r\n        {/* /.card-body */}\r\n\r\n        <div className=\"card-footer\">\r\n          <button\r\n            className=\"btn btn-warning btn-sm w-50\"\r\n            onClick={() => updateCityWeather()}\r\n          >\r\n            Update\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-danger btn-sm w-50\"\r\n            onClick={() => dispatch(deleteCityAction(cityID))}\r\n          >\r\n            Delete\r\n          </button>\r\n\r\n          <Link to={\"/\" + cityWeather.name}>\r\n            <button className=\"btn btn-outline-dark btn-sm w-100\">\r\n              More information\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        {/* /.card-footer */}\r\n      </div>\r\n      {/* /.card */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import ActionTypes from \"./actionTypes\";\r\n\r\nexport const addCityAction = (cityID) => {\r\n  return {\r\n    type: ActionTypes.ADD_CITY_WEATHER,\r\n    payload: cityID,\r\n  };\r\n};\r\n\r\nexport const deleteCityAction = (cityID) => {\r\n  return {\r\n    type: ActionTypes.REMOVE_CITY_WEATHER,\r\n    payload: cityID,\r\n  };\r\n};","export const citiesWeatherStateSelector = (state) => state.cities;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport City from \"./City\";\r\nimport { citiesWeatherStateSelector } from \"../store/weather/selectors\";\r\n\r\nconst Cities = () => {\r\n  const { cities } = useSelector(citiesWeatherStateSelector);\r\n\r\n  return cities.length ? (\r\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4\">\r\n      {cities\r\n        .map((cityID, i) => <City cityID={cityID} key={cityID + \"\" + i} />)\r\n        .reverse()}\r\n    </div>\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <h4>No cities.</h4>\r\n      <p>Please, add city.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cities;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getHourlyWeatherFetch,\r\n  getWeatherDataFetch,\r\n} from \"../../api/weather.service\";\r\nimport { showAlertThunk } from \"../../store/alert/thunks\";\r\nimport \"./style.scss\";\r\n\r\nconst CityFull = () => {\r\n  const dispatch = useDispatch();\r\n  let { city } = useParams();\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [hourlyWeatherData, setHourlyWeatherData] = useState({});\r\n\r\n  const getWeather = async () => {\r\n    const weatherData = await getWeatherDataFetch(city);\r\n    setWeatherData(weatherData);\r\n\r\n    const hourlyWeatherData = await getHourlyWeatherFetch(\r\n      weatherData.coord.lat,\r\n      weatherData.coord.lon\r\n    );\r\n    setHourlyWeatherData(hourlyWeatherData);\r\n  };\r\n\r\n  const updateCityWeather = () => {\r\n    getWeather(city);\r\n    dispatch(showAlertThunk(\"Data updated\", \"success\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n  }, [city]);\r\n\r\n  const convertZero = (value) => {\r\n    return value.toFixed() === \"-0\" ? 0 : value.toFixed();\r\n  };\r\n\r\n  const backgroundColorTemperature = (value) => {\r\n    if (Math.sign(convertZero(value)) === 1) return \"orange\";\r\n    if (Math.sign(convertZero(value)) === -1) return \"skyblue\";\r\n    return \"grey\";\r\n  };\r\n\r\n  const iconUrl =\r\n    weatherData.weather &&\r\n    \"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row no-gutters mb-3\">\r\n        <div className=\"col-12\">\r\n          <h4 className=\"text-center mb-3\">Weather in {weatherData.name}</h4>\r\n        </div>\r\n        {/* /.col-12 */}\r\n\r\n        <div className=\"col-12 bg-dark text-center text-white\">\r\n          {weatherData.main && (\r\n            <>\r\n              <p className=\"display-4\">\r\n                {weatherData.main.temp.toFixed() + \" °C\"}\r\n              </p>\r\n              <p className=\"badge badge-secondary\">\r\n                {\"Feel like: \" + weatherData.main.feels_like.toFixed() + \" °C\"}\r\n              </p>\r\n            </>\r\n          )}\r\n\r\n          {weatherData.weather && (\r\n            <div>\r\n              <span>{weatherData.weather[0].main}</span>\r\n              <img\r\n                src={iconUrl}\r\n                alt={weatherData.weather[0].description}\r\n                title={weatherData.weather[0].description}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <ul className=\"list-inline\">\r\n            {weatherData.main && (\r\n              <>\r\n                <li className=\"list-inline-item mr-4\">\r\n                  Humidity <br /> {weatherData.main.humidity + \" %\"}\r\n                </li>\r\n                <li className=\"list-inline-item mr-4\">\r\n                  Pressure <br /> {weatherData.main.pressure + \" hPa\"}\r\n                </li>\r\n              </>\r\n            )}\r\n\r\n            {weatherData.wind && (\r\n              <li className=\"list-inline-item\">\r\n                Wind Speed <br /> {weatherData.wind.speed + \" m/s\"}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        {/* /.col-12 */}\r\n      </div>\r\n      {/* /.row */}\r\n\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-12\">\r\n          <h4 className=\"text-center\">Hourly temperature</h4>\r\n        </div>\r\n        {/* /.col */}\r\n\r\n        <div className=\"col-12\">\r\n          <ul className=\"temp mb-5\">\r\n            {hourlyWeatherData.hourly &&\r\n              hourlyWeatherData.hourly.map((el, i) => {\r\n                return (\r\n                  i < 20 && (\r\n                    <li\r\n                      className=\"temp-item\"\r\n                      key={i}\r\n                      style={{ width: 100 / 20 + \"%\" }}\r\n                    >\r\n                      <span\r\n                        className=\"temp-item-value\"\r\n                        style={{\r\n                          top: -el.temp + 50 + \"%\",\r\n                          backgroundColor: backgroundColorTemperature(el.temp),\r\n                        }}\r\n                      >\r\n                        {convertZero(el.temp)}\r\n                      </span>\r\n                      <span className=\"temp-item-time\">\r\n                        {new Date(el.dt * 1000).getHours() + \":00\"}\r\n                      </span>\r\n                    </li>\r\n                  )\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n        {/* /.col */}\r\n      </div>\r\n      {/* /.row */}\r\n\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-12 text-center\">\r\n          <p className=\"bg-dark text-white\">\r\n            Time of data calculation:{\" \"}\r\n            {new Date(weatherData.dt * 1000).toLocaleString()}\r\n          </p>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => updateCityWeather(city)}\r\n          >\r\n            Update weather\r\n          </button>\r\n        </div>\r\n        {/* /.col */}\r\n      </div>\r\n      {/* /.row */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CityFull;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Cities from \"../../components/Cities\";\r\nimport CityFull from \"../../components/CityFullInfo/CityFullInfo\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Cities />\r\n      </Route>\r\n      <Route exact path=\"/:city\">\r\n        <CityFull />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","export const alertStateSelector = (state) => state.alert;\r\n","import Alert from \"./Alert\";\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideAlertAction } from \"../../store/alert/actions\";\r\nimport { alertStateSelector } from \"../../store/alert/selectors\";\r\n\r\nconst Alert = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector(alertStateSelector);\r\n\r\n  const hideAlert = () => dispatch(hideAlertAction());\r\n\r\n  return (\r\n    alert.visible && (\r\n      <div\r\n        className={`alert alert-${\r\n          alert.type || \"warning\"\r\n        } alert-dismissible mt-3`}\r\n      >\r\n        <strong>Attention!</strong> {alert.text}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={hideAlert}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import FormInput from './FormInput';\r\nexport default FormInput;","import React from \"react\";\r\n\r\nconst FormInput = React.forwardRef(({ onChange, ...props }, ref) => {\r\n  return <input {...props} ref={ref} onChange={onChange} />;\r\n});\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport FormInput from \"./FormInput\";\r\n\r\nimport { showAlertThunk } from \"../store/alert/thunks\";\r\nimport { addCityAction } from \"../store/weather/action\";\r\nimport { getWeatherDataFetch } from \"../api/weather.service\";\r\nimport { citiesWeatherStateSelector } from \"../store/weather/selectors\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { cities } = useSelector(citiesWeatherStateSelector);\r\n  const location = useLocation();\r\n  const { register, handleSubmit, setValue } = useForm();\r\n\r\n  localStorage.setItem(\"cities\", JSON.stringify(cities));\r\n\r\n  const onSubmit = async ({ city }) => {\r\n    if (!city) {\r\n      dispatch(showAlertThunk(\"Enter city\"));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const weatherData = await getWeatherDataFetch(city);\r\n      const check = cities.some((e) => e === weatherData.id);\r\n\r\n      if (!check) {\r\n        dispatch(addCityAction(weatherData.id));\r\n        setValue(\"city\", \"\");\r\n      } else {\r\n        dispatch(showAlertThunk(\"City exists\"));\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark mb-3\">\r\n      <NavLink to=\"/\" exact className=\"navbar-brand\">\r\n        Weather App\r\n      </NavLink>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        {location.pathname === \"/\" && (\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-inline\">\r\n              <FormInput\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"Add new city\"\r\n                ref={register()}\r\n              />\r\n              <button className=\"btn btn-warning\" type=\"submit\">\r\n                Add\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Application from './Application';\r\nexport default Application;","import React from \"react\";\r\n\r\nimport AppRouter from \"./AppRouter\";\r\nimport Alert from \"../../components/Alert\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nconst Application = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <Alert />\r\n      <AppRouter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n","import Layout from \"./containers/Layout\";\nimport Application from \"./containers/Application\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Application />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}